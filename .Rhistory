coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3.5, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 1000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3.5, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 10000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3.5, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 1000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 10000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None",
legend.text=element_text(size=12),
legend.title=element_text(size=12),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size=12))
ggsave(filename = "path.tiff", width = 8, height = 3, device='tiff', dpi=300)
dat <- read_csv("Data/experiment_3_noise.csv")
dat
dat <- read_csv("Data/experiment_3_noise.csv")
dat %>% mutate(avg_squared_norm_gradients = avg_squared_gradient_norm)
dat <- read_csv("Data/experiment_3_noise.csv")
dat %>% mutate(avg_squared_norm_gradients = avg_squared_gradient_norm) %>%
select(mini_batch_size, avg_squared_norm_gradients)
dat <- read_csv("Data/experiment_3_noise.csv")
dat %>% mutate(avg_squared_norm_gradients = avg_squared_gradient_norm) %>%
select(mini_batch_size, avg_squared_norm_gradients) %>%
write_csv("Data/experiment_3_noise.csv")
dat <- read_csv("Data/experiment_3_step_size.csv")
dat %>% mutate(avg_squared_norm_gradients = avg_squared_gradient_norm)
dat <- read_csv("Data/experiment_3_step_size.csv")
dat %>% mutate(avg_squared_norm_gradients = avg_squared_gradient_norm) %>%
select(mini_batch_size, avg_squared_norm_gradients)
dat <- read_csv("Data/experiment_3_step_size.csv")
dat %>% mutate(avg_squared_norm_gradients = avg_squared_gradient_norm) %>%
select(step_size, avg_squared_norm_gradients)
dat <- read_csv("Data/experiment_3_step_size.csv")
dat %>% mutate(avg_squared_norm_gradients = avg_squared_gradient_norm) %>%
select(step_size, avg_squared_norm_gradients) %>%
write_csv("Data/experiment_3_step_size.csv")
library(tidyverse)
experiment_1 <- read_csv("Data/experiment_1.csv")
experiment_2 <- read_csv("Data/experiment_2.csv")
experiment_3_step_size <- read_csv("Data/experiment_3_step_size.csv")
experiment_3_noise <- read_csv("Data/experiment_3_noise.csv")
mean <- experiment_3_step_size %>%
group_by(step_size) %>%
summarise(mean = mean(avg_squared_gradient_norm))
mean <- experiment_3_step_size %>%
group_by(step_size) %>%
summarise(mean = mean(avg_squared_norm_gradients))
experiment_3_step_size %>%
ggplot(aes(x = step_size, y = avg_squared_norm_gradients)) +
geom_point(alpha = 0.5) +
geom_line(data = mean, aes(x = step_size, y = mean), color = "red", size = 1) +
geom_point(data = mean, aes(x = step_size, y = mean), color = "red", shape = 15, size = 3) +
labs(
y = "Average Squared Gradient Norm",
x = "Step Size"
) +
theme_bw() +
scale_x_continuous(breaks=c(0, 0.0001,0.0002,0.0003,0.0004,0.0005,0.0006,0.0007,0.0008,0.0009,0.001)) +
scale_y_continuous(breaks=c(2e-7,4e-7,6e-7,8e-7,1e-6,1.2e-6, 1.4e-6),
labels=c("2e-7","4e-7","6e-7","8e-7","1e-6","1.2e-6", "1.4e-6"))
mean <- experiment_3_noise %>%
group_by(mini_batch_size) %>%
summarise(mean = mean(avg_squared_norm_gradients))
experiment_3_noise %>%
ggplot(aes(x = 1/mini_batch_size, y = avg_squared_norm_gradients)) +
geom_point(alpha = 0.5) +
geom_point(data = mean, aes(x = 1/mini_batch_size, y = mean), color = "red", shape = 15, size = 3) +
geom_line(data = mean, aes(x = 1/mini_batch_size, y = mean), color = "red") +
labs(
y = "Average Squared Gradient Norm",
x = "1 / |B|"
) +
theme_bw() +
scale_y_log10(breaks=c(0, 1e-7,2e-7,4e-7,8e-7)) +
scale_x_log10(breaks=c(0,1/10,1/9,1/8,1/7,1/6,1/5,1/4,1/3,1/2,1),
labels=c("0","1/10","1/9","1/8","1/7","1/6","1/5","1/4","1/3","1/2","1"))
setwd("~/Desktop/Gradient-Based-Methods-for-the-Training-of-Neural-Networks")
library(tidyverse)
experiment_1 <- read_csv("results/experiment_1.csv")
experiment_2 <- read_csv("results/experiment_2.csv")
experiment_3_step_size <- read_csv("results/experiment_3_step_size.csv")
experiment_3_noise <- read_csv("results/experiment_3_noise.csv")
experiment_1 %>%
filter(n_hidden == 1) %>%
ggplot(aes(x = as.factor(width), y = cost)) +
geom_boxplot(outlier.shape = NA, fill = "#69b3a2",alpha = 0.3, width=0.5) +
geom_jitter(width = 0.04, height = 0, size = 0.8, alpha = 0.5) +
theme_bw() +
labs(
y = "Cost",
x = "Hidden Neurons"
) +
theme(text = element_text(size=15))
experiment_1 %>%
filter(n_hidden == 1) %>%
group_by(width) %>%
summarise(
first_quart = quantile(cost, 0.25),
mean = median(cost),
third_quart = quantile(cost, 0.75)
) %>%
ggplot(aes(x = width, y = mean)) +
geom_line(color = 'red', size = 1) +
geom_ribbon(aes(ymin = first_quart, ymax = third_quart), fill = "grey", alpha=0.4) +
theme_bw() +
labs(
y = "Cost",
x = "Hidden Neurons"
) +
scale_y_log10()
experiment_1 %>%
filter(n_hidden %in% c(2, 3)) %>%
ggplot(aes(x = as.factor(width), y = cost, fill = as.factor(n_hidden))) +
geom_boxplot(alpha = 0.3, width = 0.75) +
theme_bw() +
labs(
y = "Cost",
x = "Hidden Neurons per Layer"
) +
theme(text = element_text(size=15)) +
theme(legend.position="top") +
guides(fill=guide_legend(title="Hidden Layers"))
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None")
experiment_2 %>%
filter(training_set_size == 1000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None")
experiment_2 %>%
filter(training_set_size == 10000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None")
mean <- experiment_3_step_size %>%
group_by(step_size) %>%
summarise(mean = mean(avg_squared_norm_gradients))
experiment_3_step_size %>%
ggplot(aes(x = step_size, y = avg_squared_norm_gradients)) +
geom_point(alpha = 0.5) +
geom_line(data = mean, aes(x = step_size, y = mean), color = "red", size = 1) +
geom_point(data = mean, aes(x = step_size, y = mean), color = "red", shape = 15, size = 3) +
labs(
y = "Average Squared Gradient Norm",
x = "Step Size"
) +
theme_bw() +
scale_x_continuous(breaks=c(0, 0.0001,0.0002,0.0003,0.0004,0.0005,0.0006,0.0007,0.0008,0.0009,0.001)) +
scale_y_continuous(breaks=c(2e-7,4e-7,6e-7,8e-7,1e-6,1.2e-6, 1.4e-6),
labels=c("2e-7","4e-7","6e-7","8e-7","1e-6","1.2e-6", "1.4e-6"))
mean <- experiment_3_noise %>%
group_by(mini_batch_size) %>%
summarise(mean = mean(avg_squared_norm_gradients))
experiment_3_noise %>%
ggplot(aes(x = 1/mini_batch_size, y = avg_squared_norm_gradients)) +
geom_point(alpha = 0.5) +
geom_point(data = mean, aes(x = 1/mini_batch_size, y = mean), color = "red", shape = 15, size = 3) +
geom_line(data = mean, aes(x = 1/mini_batch_size, y = mean), color = "red") +
labs(
y = "Average Squared Gradient Norm",
x = "1 / |B|"
) +
theme_bw() +
scale_y_log10(breaks=c(0, 1e-7,2e-7,4e-7,8e-7)) +
scale_x_log10(breaks=c(0,1/10,1/9,1/8,1/7,1/6,1/5,1/4,1/3,1/2,1),
labels=c("0","1/10","1/9","1/8","1/7","1/6","1/5","1/4","1/3","1/2","1"))
library(tidyverse)
experiment_1 <- read_csv("results/experiment_1.csv")
experiment_2 <- read_csv("results/experiment_2.csv")
experiment_3_step_size <- read_csv("results/experiment_3_step_size.csv")
experiment_3_noise <- read_csv("results/experiment_3_noise.csv")
experiment_1 %>%
filter(n_hidden == 1) %>%
ggplot(aes(x = as.factor(width), y = cost)) +
geom_boxplot(outlier.shape = NA, fill = "#69b3a2",alpha = 0.3, width=0.5) +
geom_jitter(width = 0.04, height = 0, size = 0.8, alpha = 0.5) +
theme_bw() +
labs(
y = "Cost",
x = "Hidden Neurons"
) +
theme(text = element_text(size=15))
experiment_1 %>%
filter(n_hidden == 1) %>%
group_by(width) %>%
summarise(
first_quart = quantile(cost, 0.25),
mean = median(cost),
third_quart = quantile(cost, 0.75)
) %>%
ggplot(aes(x = width, y = mean)) +
geom_line(color = 'red', size = 1) +
geom_ribbon(aes(ymin = first_quart, ymax = third_quart), fill = "grey", alpha=0.4) +
theme_bw() +
labs(
y = "Cost",
x = "Hidden Neurons"
) +
scale_y_log10()
experiment_1 %>%
filter(n_hidden %in% c(2, 3)) %>%
ggplot(aes(x = as.factor(width), y = cost, fill = as.factor(n_hidden))) +
geom_boxplot(alpha = 0.3, width = 0.75) +
theme_bw() +
labs(
y = "Cost",
x = "Hidden Neurons per Layer"
) +
theme(text = element_text(size=15)) +
theme(legend.position="top") +
guides(fill=guide_legend(title="Hidden Layers"))
experiment_2 %>%
filter(training_set_size == 100) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None")
experiment_2 %>%
filter(training_set_size == 1000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None")
experiment_2 %>%
filter(training_set_size == 10000) %>%
ggplot(aes(x = observations, y = cost, color = method)) +
geom_line(alpha = 0.6, size = 0.5) +
coord_cartesian(ylim = c(0, 1.5)) +
scale_color_manual(values = c("#FC4E07","#00AFBB","#E7B800")) +
theme_bw() +
labs(
y = "Cost",
x = "Observations",
color = "Method"
) +
theme(legend.position="None")
mean <- experiment_3_step_size %>%
group_by(step_size) %>%
summarise(mean = mean(avg_squared_norm_gradients))
experiment_3_step_size %>%
ggplot(aes(x = step_size, y = avg_squared_norm_gradients)) +
geom_point(alpha = 0.5) +
geom_line(data = mean, aes(x = step_size, y = mean), color = "red", size = 1) +
geom_point(data = mean, aes(x = step_size, y = mean), color = "red", shape = 15, size = 3) +
labs(
y = "Average Squared Gradient Norm",
x = "Step Size"
) +
theme_bw() +
scale_x_continuous(breaks=c(0, 0.0001,0.0002,0.0003,0.0004,0.0005,0.0006,0.0007,0.0008,0.0009,0.001)) +
scale_y_continuous(breaks=c(2e-7,4e-7,6e-7,8e-7,1e-6,1.2e-6, 1.4e-6),
labels=c("2e-7","4e-7","6e-7","8e-7","1e-6","1.2e-6", "1.4e-6"))
mean <- experiment_3_noise %>%
group_by(mini_batch_size) %>%
summarise(mean = mean(avg_squared_norm_gradients))
experiment_3_noise %>%
ggplot(aes(x = 1/mini_batch_size, y = avg_squared_norm_gradients)) +
geom_point(alpha = 0.5) +
geom_point(data = mean, aes(x = 1/mini_batch_size, y = mean), color = "red", shape = 15, size = 3) +
geom_line(data = mean, aes(x = 1/mini_batch_size, y = mean), color = "red") +
labs(
y = "Average Squared Gradient Norm",
x = "1 / |B|"
) +
theme_bw() +
scale_y_log10(breaks=c(0, 1e-7,2e-7,4e-7,8e-7)) +
scale_x_log10(breaks=c(0,1/10,1/9,1/8,1/7,1/6,1/5,1/4,1/3,1/2,1),
labels=c("0","1/10","1/9","1/8","1/7","1/6","1/5","1/4","1/3","1/2","1"))
